# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    
"""

import pprint
import re  # noqa: F401

import six


class SupplierAttributes2201Entry(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'entry_type': 'int',
        'entry_schema': 'str'
    }

    attribute_map = {
        'entry_type': 'entry_type',
        'entry_schema': 'entry_schema'
    }

    def __init__(self, entry_type=None, entry_schema=None):  # noqa: E501
        """SupplierAttributes2201Entry - a model defined in Swagger"""  # noqa: E501
        self._entry_type = None
        self._entry_schema = None
        self.discriminator = None
        if entry_type is not None:
            self.entry_type = entry_type
        if entry_schema is not None:
            self.entry_schema = entry_schema

    @property
    def entry_type(self):
        """Gets the entry_type of this SupplierAttributes2201Entry.  # noqa: E501

        入口类型(1:H5，2:抖音小程序)  # noqa: E501

        :return: The entry_type of this SupplierAttributes2201Entry.  # noqa: E501
        :rtype: int
        """
        return self._entry_type

    @entry_type.setter
    def entry_type(self, entry_type):
        """Sets the entry_type of this SupplierAttributes2201Entry.

        入口类型(1:H5，2:抖音小程序)  # noqa: E501

        :param entry_type: The entry_type of this SupplierAttributes2201Entry.  # noqa: E501
        :type: int
        """

        self._entry_type = entry_type

    @property
    def entry_schema(self):
        """Gets the entry_schema of this SupplierAttributes2201Entry.  # noqa: E501

        服务跳转链接  # noqa: E501

        :return: The entry_schema of this SupplierAttributes2201Entry.  # noqa: E501
        :rtype: str
        """
        return self._entry_schema

    @entry_schema.setter
    def entry_schema(self, entry_schema):
        """Sets the entry_schema of this SupplierAttributes2201Entry.

        服务跳转链接  # noqa: E501

        :param entry_schema: The entry_schema of this SupplierAttributes2201Entry.  # noqa: E501
        :type: str
        """

        self._entry_schema = entry_schema

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SupplierAttributes2201Entry, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SupplierAttributes2201Entry):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
