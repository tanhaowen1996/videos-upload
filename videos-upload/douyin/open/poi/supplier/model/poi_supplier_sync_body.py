# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    
"""

import pprint
import re  # noqa: F401

import six


class PoiSupplierSyncBody(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'supplier_ext_id': 'str',
        'type': 'SupplierType',
        'poi_id': 'str',
        'status': 'OnlineStatus',
        'name': 'str',
        'images': 'list[str]',
        'contact_phone': 'str',
        'contact_tel': 'str',
        'address': 'str',
        'description': 'str',
        'services': 'list[PoiSupplierSyncServices]',
        'attributes': 'SupplierAttributes'
    }

    attribute_map = {
        'supplier_ext_id': 'supplier_ext_id',
        'type': 'type',
        'poi_id': 'poi_id',
        'status': 'status',
        'name': 'name',
        'images': 'images',
        'contact_phone': 'contact_phone',
        'contact_tel': 'contact_tel',
        'address': 'address',
        'description': 'description',
        'services': 'services',
        'attributes': 'attributes'
    }

    def __init__(self, supplier_ext_id=None, type=None, poi_id=None, status=None, name=None, images=None, contact_phone=None, contact_tel=None, address=None, description=None, services=None, attributes=None):  # noqa: E501
        """PoiSupplierSyncBody - a model defined in Swagger"""  # noqa: E501
        self._supplier_ext_id = None
        self._type = None
        self._poi_id = None
        self._status = None
        self._name = None
        self._images = None
        self._contact_phone = None
        self._contact_tel = None
        self._address = None
        self._description = None
        self._services = None
        self._attributes = None
        self.discriminator = None
        self.supplier_ext_id = supplier_ext_id
        self.type = type
        self.poi_id = poi_id
        self.status = status
        self.name = name
        self.images = images
        if contact_phone is not None:
            self.contact_phone = contact_phone
        if contact_tel is not None:
            self.contact_tel = contact_tel
        if address is not None:
            self.address = address
        if description is not None:
            self.description = description
        if services is not None:
            self.services = services
        self.attributes = attributes

    @property
    def supplier_ext_id(self):
        """Gets the supplier_ext_id of this PoiSupplierSyncBody.  # noqa: E501

        接入方店铺id  # noqa: E501

        :return: The supplier_ext_id of this PoiSupplierSyncBody.  # noqa: E501
        :rtype: str
        """
        return self._supplier_ext_id

    @supplier_ext_id.setter
    def supplier_ext_id(self, supplier_ext_id):
        """Sets the supplier_ext_id of this PoiSupplierSyncBody.

        接入方店铺id  # noqa: E501

        :param supplier_ext_id: The supplier_ext_id of this PoiSupplierSyncBody.  # noqa: E501
        :type: str
        """
        if supplier_ext_id is None:
            raise ValueError("Invalid value for `supplier_ext_id`, must not be `None`")  # noqa: E501

        self._supplier_ext_id = supplier_ext_id

    @property
    def type(self):
        """Gets the type of this PoiSupplierSyncBody.  # noqa: E501


        :return: The type of this PoiSupplierSyncBody.  # noqa: E501
        :rtype: SupplierType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PoiSupplierSyncBody.


        :param type: The type of this PoiSupplierSyncBody.  # noqa: E501
        :type: SupplierType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def poi_id(self):
        """Gets the poi_id of this PoiSupplierSyncBody.  # noqa: E501

        抖音poi id, 三方如果使用高德poi id可以通过/poi/query/接口转换，其它三方poi id走poi匹配功能进行抖音poi id获取  # noqa: E501

        :return: The poi_id of this PoiSupplierSyncBody.  # noqa: E501
        :rtype: str
        """
        return self._poi_id

    @poi_id.setter
    def poi_id(self, poi_id):
        """Sets the poi_id of this PoiSupplierSyncBody.

        抖音poi id, 三方如果使用高德poi id可以通过/poi/query/接口转换，其它三方poi id走poi匹配功能进行抖音poi id获取  # noqa: E501

        :param poi_id: The poi_id of this PoiSupplierSyncBody.  # noqa: E501
        :type: str
        """
        if poi_id is None:
            raise ValueError("Invalid value for `poi_id`, must not be `None`")  # noqa: E501

        self._poi_id = poi_id

    @property
    def status(self):
        """Gets the status of this PoiSupplierSyncBody.  # noqa: E501


        :return: The status of this PoiSupplierSyncBody.  # noqa: E501
        :rtype: OnlineStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PoiSupplierSyncBody.


        :param status: The status of this PoiSupplierSyncBody.  # noqa: E501
        :type: OnlineStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")  # noqa: E501

        self._status = status

    @property
    def name(self):
        """Gets the name of this PoiSupplierSyncBody.  # noqa: E501

        店铺名称  # noqa: E501

        :return: The name of this PoiSupplierSyncBody.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PoiSupplierSyncBody.

        店铺名称  # noqa: E501

        :param name: The name of this PoiSupplierSyncBody.  # noqa: E501
        :type: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def images(self):
        """Gets the images of this PoiSupplierSyncBody.  # noqa: E501

        店铺图片  # noqa: E501

        :return: The images of this PoiSupplierSyncBody.  # noqa: E501
        :rtype: list[str]
        """
        return self._images

    @images.setter
    def images(self, images):
        """Sets the images of this PoiSupplierSyncBody.

        店铺图片  # noqa: E501

        :param images: The images of this PoiSupplierSyncBody.  # noqa: E501
        :type: list[str]
        """
        if images is None:
            raise ValueError("Invalid value for `images`, must not be `None`")  # noqa: E501

        self._images = images

    @property
    def contact_phone(self):
        """Gets the contact_phone of this PoiSupplierSyncBody.  # noqa: E501

        联系手机号  # noqa: E501

        :return: The contact_phone of this PoiSupplierSyncBody.  # noqa: E501
        :rtype: str
        """
        return self._contact_phone

    @contact_phone.setter
    def contact_phone(self, contact_phone):
        """Sets the contact_phone of this PoiSupplierSyncBody.

        联系手机号  # noqa: E501

        :param contact_phone: The contact_phone of this PoiSupplierSyncBody.  # noqa: E501
        :type: str
        """

        self._contact_phone = contact_phone

    @property
    def contact_tel(self):
        """Gets the contact_tel of this PoiSupplierSyncBody.  # noqa: E501

        联系座机号  # noqa: E501

        :return: The contact_tel of this PoiSupplierSyncBody.  # noqa: E501
        :rtype: str
        """
        return self._contact_tel

    @contact_tel.setter
    def contact_tel(self, contact_tel):
        """Sets the contact_tel of this PoiSupplierSyncBody.

        联系座机号  # noqa: E501

        :param contact_tel: The contact_tel of this PoiSupplierSyncBody.  # noqa: E501
        :type: str
        """

        self._contact_tel = contact_tel

    @property
    def address(self):
        """Gets the address of this PoiSupplierSyncBody.  # noqa: E501

        店铺地址  # noqa: E501

        :return: The address of this PoiSupplierSyncBody.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this PoiSupplierSyncBody.

        店铺地址  # noqa: E501

        :param address: The address of this PoiSupplierSyncBody.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def description(self):
        """Gets the description of this PoiSupplierSyncBody.  # noqa: E501

        店铺介绍(<=500字)  # noqa: E501

        :return: The description of this PoiSupplierSyncBody.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PoiSupplierSyncBody.

        店铺介绍(<=500字)  # noqa: E501

        :param description: The description of this PoiSupplierSyncBody.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def services(self):
        """Gets the services of this PoiSupplierSyncBody.  # noqa: E501

        店铺提供的服务列表  # noqa: E501

        :return: The services of this PoiSupplierSyncBody.  # noqa: E501
        :rtype: list[PoiSupplierSyncServices]
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this PoiSupplierSyncBody.

        店铺提供的服务列表  # noqa: E501

        :param services: The services of this PoiSupplierSyncBody.  # noqa: E501
        :type: list[PoiSupplierSyncServices]
        """

        self._services = services

    @property
    def attributes(self):
        """Gets the attributes of this PoiSupplierSyncBody.  # noqa: E501


        :return: The attributes of this PoiSupplierSyncBody.  # noqa: E501
        :rtype: SupplierAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this PoiSupplierSyncBody.


        :param attributes: The attributes of this PoiSupplierSyncBody.  # noqa: E501
        :type: SupplierAttributes
        """
        if attributes is None:
            raise ValueError("Invalid value for `attributes`, must not be `None`")  # noqa: E501

        self._attributes = attributes

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PoiSupplierSyncBody, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PoiSupplierSyncBody):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
