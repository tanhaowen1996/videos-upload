# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    
"""

import pprint
import re  # noqa: F401

import six


class SpuAttributes1213(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cancel_ammend': 'SpuAttributes1213Response',
        'extra': 'str'
    }

    attribute_map = {
        'cancel_ammend': 'cancel_ammend',
        'extra': 'extra'
    }

    def __init__(self, cancel_ammend=None, extra=None):  # noqa: E501
        """SpuAttributes1213 - a model defined in Swagger"""  # noqa: E501
        self._cancel_ammend = None
        self._extra = None
        self.discriminator = None
        if cancel_ammend is not None:
            self.cancel_ammend = cancel_ammend
        if extra is not None:
            self.extra = extra

    @property
    def cancel_ammend(self):
        """Gets the cancel_ammend of this SpuAttributes1213.  # noqa: E501


        :return: The cancel_ammend of this SpuAttributes1213.  # noqa: E501
        :rtype: SpuAttributes1213Response
        """
        return self._cancel_ammend

    @cancel_ammend.setter
    def cancel_ammend(self, cancel_ammend):
        """Sets the cancel_ammend of this SpuAttributes1213.


        :param cancel_ammend: The cancel_ammend of this SpuAttributes1213.  # noqa: E501
        :type: SpuAttributes1213Response
        """

        self._cancel_ammend = cancel_ammend

    @property
    def extra(self):
        """Gets the extra of this SpuAttributes1213.  # noqa: E501

        退改政策自定义内容  # noqa: E501

        :return: The extra of this SpuAttributes1213.  # noqa: E501
        :rtype: str
        """
        return self._extra

    @extra.setter
    def extra(self, extra):
        """Sets the extra of this SpuAttributes1213.

        退改政策自定义内容  # noqa: E501

        :param extra: The extra of this SpuAttributes1213.  # noqa: E501
        :type: str
        """

        self._extra = extra

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SpuAttributes1213, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SpuAttributes1213):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
